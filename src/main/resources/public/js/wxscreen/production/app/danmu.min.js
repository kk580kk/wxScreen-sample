!function (t) {
    if (!t.danmu) {
        var i = "秋天，绝对是个适合扮靓的季节。没有夏季的毒辣太阳，可以避免一出门就汗流浃背的窘相；没有冬季肆虐的冷风，不必缩在屋里躲避寒流。秋天可以尽情张扬，随心所欲。当秋姑娘迈着轻盈的脚步款款而来的时候，爱美的美眉们突然惊觉：该上街逛逛了，淘淘今秋的时尚物品，好搭配那些靓靓的秋衣，把自己打造成一个靓丽的秋季美人。 　　秋季有那些精美的饰品和扮靓招数，需要购买哪些东西来装扮自己？  　　街头淘首饰  　　秋季不冷不热，秋衣多半是低领的，或者敞开衣领。光溜溜的雪白脖子没有一条项链装饰，岂不是美中不足？笔者在闲逛中发现了几款比较有特色的西藏项链，可以买来配上秋装。  　　珊瑚藏银链藏银是西藏民族之银，对人体有强烈吸收能力。红色的珊瑚和银色的藏银珠相配，不失为一条活泼又富有时尚味道的项链。  　　天珠项链天珠是吉祥物，最早起源于西藏，因其不同的图案具有不同的象征意义，成了人们护身的时尚饰品。物理学家还研究发现天珠可以增强人体磁场，活化细胞组织，促进血液循环，调理人体机能。  　　牛骨项链牛的骨头设计创作了多款首饰，它能辟邪开运，代表了西藏永久的民族风情。", e = t.danmu = {
            _msgList: [],
            _prePlayList: [],
            _msgPlayedList: [],
            _colorList: ["white", "orange2", "orange", "green"],
            _colorHashList: {white: "#ffffff", orange2: "ff4000", orange: "#ff7800", green: "#189c51"},
            _Vmax: 500,
            _Vmin: 70,
            _Tvisible: null,
            _Dmargin: 50,
            _playCheckTime: 200,
            _pullCheckTime: 2e3,
            _pullTimer: null,
            _pullAjaxObj: null,
            _conf: null
        };
        e.pullStop = function () {
            return clearTimeout(this._pullTimer), this._pullTimer = null, this._pullAjaxObj && this._pullAjaxObj.abort(), this._pullAjaxObj = null, this
        }, e.pull = function () {
            var t = this;
            return this.pullStop(), this.sync(function () {
                t._pullTimer = setTimeout(function () {
                    t.pull()
                }, t._pullCheckTime)
            }), this
        }, e.sync = function (i) {
            var e = location.hostname;
            //if (-1 == e.indexOf("wxscreen.sinaapp.com") && -1 == e.indexOf("wxscreen.com") && -1 == e.indexOf("alltosun.net"))return window.location.reload(), void 0;
            if ("started" == this._syncProgress)return i("started");
            this._syncProgress = "started";
            var n, s = this._tag_id ? this._tag_lastId : this._lastId, a = this;
            return i = i || t.loop, n = {
                last_id: s,
                tag_id: this._tag_id
            }, this._pullAjaxObj = $.get(this._conf.msgUrl, n, function (t) {
                var e = null, n = !1;
                "ok" != t.info ? e = t.info : (t.message_list && a.add(t.message_list), n = !0), a._syncProgress = "stoped", i(e, n)
            }, "json").error(function (t, e, n) {
                a.log("danmu.sync ajax-error: jqXHR, textStatus, errorThrown ", t, e, n), a._syncProgress = "stoped", i("ajax-error:" + e)
            }), this
        }, e.add = function (t) {
            return this._msgList || (this._msgList = []), t && t.length ? (this._tag_id ? this._tag_lastId = t[t.length - 1].tag_relation_id : this._lastId = t[t.length - 1].update_time_ms, this._msgList = this._msgList.concat(t), void 0) : !1
        }, e.log = function () {
            return this.DEBUG ? arguments.length ? (window.console && console.log && console.log.apply && (console.log(""), console.log.apply(console, Array.prototype.slice.call(arguments, 0, arguments.length)), console.log(" ")), void 0) : !1 : !1
        }, e.setConf = function (t) {
            this._conf = t
        }, e.init = function (t) {
            if ("undefined" != typeof t ? this._conf = t : this._conf || (this._conf = {}), this._WW = $(window).width(), this._WH = $(window).height(), this._Tvisible = 1 * parseFloat((this._WW / this._Vmax + this._WW / this._Vmin) / 2).toFixed(2), this._DH = $(".danmu-row").height(), this._DTop = $(".danmu-row:eq(0)").position().top, $(".footer:visible").length)var i = $(".footer")[0].getBoundingClientRect().top - 10; else var i = this._WH;
            if (this.initDom(i), Modernizr.canvas && (this._conf.canvas || window.APP && 1 == window.APP.urlParams.canvas) && this.initCanvas(i), this._conf && this._conf.msgUrl && this.pull(), !this._inited && this._conf.isDefaultStyle) {
                var e = top.$("#wrap").css("background");
                if (!e)return;
                $("body").css("background", e)
            }
            this._inited = !0
        }, e.initDom = function (t) {
            var i;
            $.each($(".danmu-row"), function () {
                $(this).show(), i = this.getBoundingClientRect(), i.bottom > t && $(this).hide()
            }), this._lineNum = $(".danmu-row:visible").length
        }, e.initCanvas = function (t) {
            $(".danmu-row").hide();
            var i = "width:" + this._WW + "px;height:" + t + "px;position:absolute;top:0;left:0;";
            $('<canvas id="danmuCanvas" style="' + i + '" width="' + this._WW + '" height="' + t + '"></canvas>').appendTo(".danmu-box"), this.stage || (this.stage = new createjs.Stage("danmuCanvas"));
            for (var e = this._DTop, n = 0; n < this._lineNum; n++) {
                var s = "line" + n, a = this.stage.getChildByName(s);
                if (!a) {
                    var r = new createjs.Container;
                    r.name = "line" + n, r.setBounds(0, e, this._WW, this._DH), r.y = e, this.stage.addChild(r)
                }
                e += this._DH
            }
            createjs.Ticker.setFPS(60), createjs.Ticker.timingMode = createjs.Ticker.RAF, createjs.Ticker.addEventListener("tick", this.stage)
        }, e.bindEvent = function () {
            $(window).on("resize", function () {
                e.init()
            }), t.APP && (APP.on("show", function () {
                e.play()
            }), APP.on("hide", function () {
                e.stop()
            }), APP.on("message.newMsgReceived", function (t, i) {
                e._msgList || (e._msgList = []), e._msgList = e._msgList.concat(i)
            }))
        }, e.play = function () {
            this.init(), this.stop(), this._playState = "played", this.playCheckOnce()
        }, e.playCheckOnce = function () {
            var t, i, n = [], s = this._lineNum - this._prePlayList;
            if (s > 0) {
                var a = this.getMessage(s);
                if (a.length)for (var r = 0; r < a.length; r++)t = this.renderOne(a[r]), t && this._prePlayList.push(t)
            }
            for (var r = 0; r < this._prePlayList.length; r++)t = this._prePlayList[r], i = this.setLine(t), !0 !== i ? n.push(t) : this.animateOne(t);
            this._prePlayList = n, "played" == this._playState && (this._playerTimer = setTimeout(function () {
                e.playCheckOnce()
            }, this._playCheckTime))
        }, e.stop = function () {
            this._playerTimer && (clearTimeout(this._playerTimer), this._playerTimer = null), $(".danmu-one").remove(), this._prePlayList = [], this.stage && this.clearCanvas(), this.pullStop(), this._playState = "stoped"
        }, e.clearCanvas = function () {
            for (var t = !1, i = 0; i < this._lineNum; i++) {
                var e = "line" + i, n = this.stage.getChildByName(e);
                n && (n.removeAllChildren(), t = !0)
            }
            t && this.stage.update()
        }, e.getMessage = function (t) {
            return t = t || 1, this._msgList.splice(0, t)
        }, e.setLine = function (t) {
            for (var i, e, n, s, a, r, o, h = this.data(t, "width"), l = this.getDuration(t), c = (h + this._WW) / l, u = !1, d = (new Date).getTime(), _ = 0; _ < this._lineNum; _++) {
                if (i = this.getLastD(_), !i) {
                    u = this.appendD(t, _);
                    break
                }
                if (e = this.data(i, "width"), n = this.getDuration(i), s = (e + this._WW) / n, a = (d - this.data(i, "start_t")) / 1e3, !(e > a * s) && (r = this._WW / c, o = (this._WW - s * a + e) / s, r >= o)) {
                    u = this.appendD(t, _);
                    break
                }
            }
            return u
        }, e.getLastD = function (t) {
            var i;
            if (this.stage) {
                var e = "line" + t, n = this.stage.getChildByName(e);
                n && (i = n.children[n.children.length - 1], i || (i = null))
            } else i = $("#js_dRow" + t + " .danmu-one:last"), i.length || (i = null);
            return i
        }, e.appendD = function (t, i) {
            var e;
            if (this.stage) {
                var n = this.stage.getChildByName("line" + i);
                n && (n.addChild(t), e = !0)
            } else t.appendTo("#js_dRow" + i), e = !0;
            return e
        }, e.getDuration = function (t) {
            var i, e, n = this.data(t, "width"), s = n + this._WW;
            return i = s / this._Tvisible, e = i < this._Vmin ? s / this._Vmin : i > this._Vmax ? s / this._Vmax : this._Tvisible, 1 * parseFloat(e).toFixed(2)
        }, e.animateOne = function (t) {
            var i = (new Date).getTime();
            if (this.data(t, "start_t", i), this.stage)return this.animateOneCanvas(t);
            var e = this.data(t, "width");
            return Modernizr.csstransitions ? t.transition({
                x: -e,
                duration: 1e3 * this.getDuration(t),
                easing: "linear",
                complete: function () {
                    $(this).remove()
                }
            }) : t.animate({left: -e}, 1e3 * this.getDuration(t), "linear", function () {
                $(this).remove()
            }), t
        }, e.animateOneCanvas = function (t) {
            var i = 1e3 * this.getDuration(t), e = this.data(t, "width");
            createjs.Tween.get(t).to({x: -e}, i, createjs.Ease.linear).call(function () {
                try {
                    this.parent.removeChild(this)
                } catch (t) {
                }
            })
        }, e.renderOneCanvas = function (t) {
            var i;
            if ("image" == t.msg_type)return i;
            var e = this._colorHashList[this._colorList[this.rand(0, this._colorList.length - 1)]], n = "40px 'Microsoft yahei', SimHei";
            return i = new createjs.Text(t.username + "：" + t.content, n, e), this.data(i, "width", i.getBounds().width + this._Dmargin), i.x = this._WW, i
        }, e.renderOne = function (t) {
            var i;
            if (this.stage)return this.renderOneCanvas(t);
            if ("image" != t.msg_type) {
                t.content = t.content.replace(/(\n|(<br\/>)|(<br>)|(<br\s\/>))/g, " ");
                var e = this._colorList[this.rand(0, this._colorList.length - 1)];
                i = $('<div data-id="' + t.id + '" class="danmu-one">           <span class="' + e + '">' + t.username + '：</span>           <span class="' + e + '">' + t.content + "</span>         </div>").appendTo("body"), this.data(i, "width", i.width() + this._Dmargin), Modernizr.csstransitions ? i.css("x", this._WW) : i.css("left", this._WW)
            }
            return i
        }, e.rand = function (t, i) {
            return Math.floor(Math.random() * (i - t + 1)) + t
        }, e.benchmark = function () {
            this.benchmarkStop(), this._benchTimer = setInterval(function () {
                for (var t = 0; 50 > t; t++) {
                    if (e._benchNum++, e._benchNum % 3 == 0)var i = e.rand(1, 45); else if (e._benchNum % 3 == 1)var i = e.rand(1, 100); else var i = e.rand(1, 450);
                    e._msgList.push({id: "bench", username: "bench+", content: e.randomStr(i)})
                }
            }, 5e3)
        }, e.randomStr = function (t) {
            if (isNaN(t))return "";
            for (var e = "", n = 0; t > n; n++) {
                var s = this.rand(0, i.length - 1);
                e += i.charAt(s)
            }
            return e
        }, e.benchmarkStop = function () {
            this._benchTimer && (clearInterval(this._benchTimer), this._benchTimer = null), this._benchNum = 0
        }, e.data = function (t, i, e) {
            if ("undefined" != typeof e)"function" == typeof t.data ? t.data(i, e) : t["_" + i] = e; else {
                if ("undefined" != typeof t["_" + i])return t["_" + i];
                if ("function" == typeof t.data)return t.data(i)
            }
        }, e.loop = function () {
        }
    }
}(window), danmu.bindEvent();