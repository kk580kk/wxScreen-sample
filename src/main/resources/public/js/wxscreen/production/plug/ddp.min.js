!function (d) {
    function e() {
        m(), t()
    }

    function t() {
        d.sub("user.synced", function () {
            d.user._isReady && (T(d.user.ddpGetUserLen()), A())
        }), d.sub("user.ddpSynced", function () {
            d.user._isReady && (T(d.user.ddpGetUserLen()), A(), _(1) && o(1), _(2) && o(2))
        }), d.subOnce("user.all_ready", function () {
            $("#ddp_startBtn").children("span").text("开始对对碰"), d.btnLoading($("#ddp_resetBtn"), "hide"), T(d.user.ddpGetUserLen()), o(), A(), g(), U()
        }), d.sub("key.enter.down", function () {
            "ddp" == d.getState() && $("#ddp_startBtn").trigger("click")
        })
    }

    function a() {
        if (!d.user._ddp_ids._f_ids.length && !d.user._ddp_ids._m_ids.length)return d.showMsg("参与对对碰的女/男嘉宾不足，赶紧上墙来参加吧"), void 0;
        if ("yes" == $("#ddp_startBtn").attr("data-disabled"))return d.showMsg("正在配对保存中..."), void 0;
        var e = s();
        if (-1 == e)return d.showMsg("配对区位置已满，请先清空"), !1;
        if ($("#ddp_startBtn").attr("data-disabled", "yes"), gender = e, L = "matching", 0 == e) {
            var t = n(1, 1), a = n(2, 2);
            if (!t || !a)return u(), p(), !1
        } else n(e, gender);
        $("#ddp_startBtn").children("span").text("停止")
    }

    function r(d) {
        return 1 == d ? (_(1) && (I = {id: 0, gender: 0}), I) : 2 == d ? (_(2) && (G = {id: 0, gender: 0}), G) : void 0
    }

    function s() {
        return _() ? 0 : _(1) ? 1 : _(2) ? 2 : -1
    }

    function n(e, t) {
        var a, r, s;
        if (1 == e)a = $("#ddp_userAvatar"), r = $("#ddp_userName"); else {
            if (2 != e)return !1;
            a = $("#ddp_toUserAvatar"), r = $("#ddp_toUserName")
        }
        if (1 == t ? s = d.user._ddp_ids._m_ids : 2 == t ? s = d.user._ddp_ids._f_ids : d.throwErr("in func _slideUser: gender param is wrong"), !s.length)return u(e), p(e), d.showMsg("参与对对碰的嘉宾不足，赶紧上墙来参加吧"), !1;
        u(e);
        var n = setInterval(function () {
            var d = l(s);
            a.attr("src", d.avatar), r.html(d.name), c(e, d)
        }, 45);
        return i(e, n), !0
    }

    function i(d, e) {
        1 == d ? y = e : 2 == d && (k = e)
    }

    function c(d, e) {
        1 == d ? I = e : 2 == d && (G = e)
    }

    function l(e) {
        if (!e.length)return d.showMsg("参与对对碰的女/男嘉宾不足，赶紧上墙来参加吧"), d.throwErr("_getDisplayUser !users.length"), void 0;
        var t = d.rand(0, e.length - 1), a = e[t];
        return d.user.info(a)
    }

    function u(d) {
        d ? 1 == d ? (clearInterval(y), y = null) : 2 == d && (clearInterval(k), k = null) : (clearInterval(y), y = null, clearInterval(k), k = null)
    }

    function _(d) {
        return 1 == d ? $("#ddp_userAvatar").data("default_src") == $("#ddp_userAvatar").attr("src") : 2 == d ? $("#ddp_toUserAvatar").data("default_src") == $("#ddp_toUserAvatar").attr("src") : _(1) && _(2)
    }

    function o(e) {
        if (1 == e)$("#ddp_userAvatar").attr("src", $("#ddp_userAvatar").data("default_src")), $("#ddp_userName").html("♂共" + d.user._ddp_ids._m_ids.length + "位"), r(1); else {
            if (2 != e)return o(1), o(2), void 0;
            $("#ddp_toUserAvatar").attr("src", $("#ddp_toUserAvatar").data("default_src")), $("#ddp_toUserName").html("♀共" + d.user._ddp_ids._f_ids.length + "位"), r(2)
        }
    }

    function p(d) {
        o(d), $("#ddp_startBtn").attr("data-disabled", "no").children("span").text("开始对对碰"), $("#ddp_bubble1, #ddp_bubble2, #ddp_bubble3").hide()
    }

    function h() {
        u();
        var e, t;
        e = r(1), t = r(2), e.id && t.id ? (L = "pos_all_matched", f(e, t), L = "saving", $("#ddp_startBtn").children("span").text("配对保存中..."), d.user.ddpSave(e.id, t.id, function (e, t) {
            e ? (d.showMsg(e), p()) : ($('.ddp_matchedUser[data-id="' + t.user_id + '"]').closest("li").attr("data-id", t.id), w(), x(d.user._ddped_ids.length), A(t), T(d.user.ddpGetUserLen())), L = "keeping", $("#ddp_startBtn").children("span").text("开始对对碰")
        })) : (L = e.id ? "pos1_matched" : "pos2_matched", $("#ddp_startBtn").attr("data-disabled", "no").children("span").text("开始对对碰"))
    }

    function f(e, t) {
        return e && t ? (T(d.user.ddpGetUserLen()), $("#ddp_bubble1").fadeIn(200), setTimeout(function () {
            $("#ddp_bubble2").fadeIn(300)
        }, 250), setTimeout(function () {
            $("#ddp_bubble3").fadeIn(300)
        }, 300), void 0) : !1
    }

    function m() {
        b(), v()
    }

    function v() {
        $(".ddp_matchedUser, .ddp_matchedToUser").live("mouseenter", function () {
            $(this).find(".delMatchedUserBtn").show()
        }).live("mouseleave", function () {
            $(this).find(".delMatchedUserBtn").hide()
        }), $(".ddp_matchedUserOne").live("mouseenter", function () {
            $(this).find(".delMatchedAllBtn").show()
        }).live("mouseleave", function () {
            $(this).find(".delMatchedAllBtn").hide()
        }), $(".delMatchedUserBtn, .delMatchedAllBtn").live("click", function () {
            if (!_() && (_(1) || _(2)))return d.showMsg("对对碰区域还有未完成的配对，暂不能进行删除操作"), !1;
            if (!confirm("确定要拆散这对有缘人？"))return !1;
            var e, t = $(this), a = 0, r = 0, s = 0;
            t.hasClass("delMatchedAllBtn") ? (a = t.closest("li").find(".ddp_matchedUser").attr("data-id"), r = t.closest("li").find(".ddp_matchedToUser").attr("data-id"), e = {
                id: a,
                to_id: r
            }) : t.closest(".ddp_matchedUser").length ? (a = t.closest(".ddp_matchedUser").attr("data-id"), r = t.closest(".ddp_matchedUser").siblings(".ddp_matchedToUser").attr("data-id"), s = 2, e = {
                id: a,
                to_id: 0
            }) : (r = t.closest(".ddp_matchedToUser").attr("data-id"), a = t.closest(".ddp_matchedToUser").siblings(".ddp_matchedUser").attr("data-id"), s = 1, e = {
                id: 0,
                to_id: r
            }), d.user.ddpDelete(e.id, e.to_id, function (e, t) {
                if (e)return d.showMsg(e);
                if (A(t), T(d.user.ddpGetUserLen()), s) {
                    p();
                    var n = 1 == s ? a : r, i = d.user.info(n);
                    1 == s ? ($("#ddp_userAvatar").attr("src", i.avatar), $("#ddp_userName").html(i.name), c(1, i), L = "pos1_matched") : ($("#ddp_toUserAvatar").attr("src", i.avatar), $("#ddp_toUserName").html(i.name), c(2, i), L = "pos2_matched");
                    var l = 1 == s ? "为他求缘分" : "为她求缘分";
                    $("#ddp_startBtn").children("span").text(l)
                }
            })
        })
    }

    function U() {
        $("#ddp_resetBtn").click(function () {
            return "yes" == $(this).attr("data-disabled") ? (d.showMsg("正在重置配对信息..."), void 0) : (d.btnLoading($(this), "show"), d.user.ddpReset(function (e) {
                return d.btnLoading($("#ddp_resetBtn"), "hide"), e ? d.showMsg(e) : (T(d.user.ddpGetUserLen()), A(), p(), void 0)
            }), void 0)
        })
    }

    function g() {
        $("#ddp_startBtn").click(function () {
            "free" == L || "pos1_matched" == L || "pos2_matched" == L || "keeping" == L ? ("keeping" == L && (p(), L = "free"), a()) : "matching" == L ? h() : d.showMsg("稍等，正在对对碰...")
        })
    }

    function b() {
        $(".btnDdp").click(function () {
            return d.getConf("ddpPlug") ? (B(), void 0) : (alert("对不起，您还没有开通对对碰功能，请咨询客服"), void 0)
        }), d.sub("key.68.down", function () {
            $(".btnDdp").trigger("click")
        })
    }

    function B() {
        $("#ddp_layer:visible").length ? d.setState("message") : d.setState("ddp")
    }

    function w() {
        var d = $("#ddp_matchedUserBox li"), e = d.length;
        $.each(d, function (d) {
            $(this).find(".ddp_viewOrder em").text(e - d)
        })
    }

    function A(e) {
        if (e) {
            if (e.id > 0 && e.user_id <= 0 && e.to_user_id <= 0)return $('.ddp_matchedUserOne[data-id="' + e.id + '"]').fadeOut("fast", function () {
                $(this).remove(), w(), x(d.user._ddped_ids.length), p()
            }), void 0;
            var t;
            if (e.user_id > 0 && (t = $('.ddp_matchedUser[data-id="' + e.user_id + '"]')), t && t.length || !(e.to_user_id > 0) || (t = $('.ddp_matchedToUser[data-id="' + e.to_user_id + '"]')), t && t.length) {
                var a = t.closest("li");
                e.user_id > 0 ? (a.find(".ddp_matchedUser").attr("data-id", e.user_id), a.find(".ddp_matchedUserAvatar").attr("src", e.avatar), a.find(".ddp_matchedUserName").html(e.name)) : (a.find(".ddp_matchedUser").attr("data-id", 0), a.find(".ddp_matchedUserAvatar").attr("src", $("#ddp_userAvatar").attr("data-default_src")), a.find(".ddp_matchedUserName").html("……")), e.to_user_id > 0 ? (a.find(".ddp_matchedToUser").attr("data-id", e.to_user_id), a.find(".ddp_matchedToUserAvatar").attr("src", e.to_avatar), a.find(".ddp_matchedToUserName").html(e.to_name)) : (a.find(".ddp_matchedToUser").attr("data-id", 0), a.find(".ddp_matchedToUserAvatar").attr("src", $("#ddp_toUserAvatar").attr("data-default_src")), a.find(".ddp_matchedToUserName").html("……")), a.attr("data-id", e.id)
            } else {
                var r = M(e);
                $("#ddp_matchedUserBox").prepend(r), $("#ddp_matchedUserBox").parent().scrollTop(0)
            }
        } else {
            for (var r = "", s = !1, n = d.user._ddped_ids.length - 1; n >= 0; n--) {
                var i = d.user._ddped_ids[n];
                $('#ddp_matchedUserBox li[data-id="' + i.id + '"]').length || (s = !0), r += M(d.user._ddped_ids[n])
            }
            (s || !d.user._ddped_ids.length) && $("#ddp_matchedUserBox").html(r)
        }
        w(), x(d.user._ddped_ids.length)
    }

    function M(d) {
        var e = '      <li class="clearfix ddp_matchedUserOne" data-id="' + d.id + '">        <span class="num-p num-p-pair left ddp_viewOrder"><em></em></span>        <div class="wrap-pair-per">          <span class="icon-heart2"></span>          <div class="pair-sel ddp_matchedUser" data-id="' + d.user_id + '">            <a><img width=50 height=50 class="ddp_matchedUserAvatar" src="' + d.avatar + '" alt=""></a>            <a class="pair-name ddp_matchedUserName">' + d.name + '</a>            <a href="javascript:void(0);" class="del2 delMatchedUserBtn">×</a>          </div>          <div class="pair-sel ddp_matchedToUser" data-id="' + d.to_user_id + '">            <a><img width=50 height=50 class="ddp_matchedToUserAvatar" src="' + d.to_avatar + '" alt=""></a>            <a class="pair-name ddp_matchedToUserName">' + d.to_name + '</a>            <a href="javascript:void(0);" class="del2 delMatchedUserBtn">×</a>          </div>        </div>        <a href="javascript:void(0);" class="del del3 delMatchedAllBtn">×</a>      </li>';
        return e
    }

    function T(d) {
        isNaN(d) || $("#ddp_userCount").text(d)
    }

    function x(d) {
        isNaN(d) || $("#ddp_matchedGroupNum").text(d)
    }

    if (!d.ddp) {
        var N = d.ddp = {};
        N.off = function () {
            d.user._isReady && (d.user.pullStop(), d.user.ddpPullStop()), $("#ddp_layer").fadeOut("fast")
        }, N.on = function () {
            d.user._isReady && (d.user.pull(), d.user.ddpPull()), $("#ddp_layer").fadeIn("fast")
        };
        var y, k, L = "free", I = {id: 0, gender: 0}, G = {id: 0, gender: 0};
        $(function () {
            e()
        })
    }
}(wxscreen);